name: Build
on:
  push:
    paths:
      - src/**
      - .github/**
      - build.gradle.kts
      - settings.gradle.kts
    tags:
      - '**'
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: lower-repo
        name: Repository to lowercase
        run: |
            echo "repository=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: generate-and-submit
      - name: Build with Gradle
        run: ./gradlew build
      - name: Build Native OCI Image
        run: ./gradlew bootBuildImage --publishImage --imagePlatform linux/amd64
        env:
          DOCKER_IMAGE: "ghcr.io/${{ steps.lower-repo.outputs.repository }}/publications:${{ github.sha }}-amd64"
          USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_PLATFORM: "amd64"
          DOCKER_TAGS: ${{github.sha}}-amd64
  build-aarch64:
    runs-on: ubuntu-24.04-arm
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: lower-repo
        name: Repository to lowercase
        run: |
            echo "repository=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT
      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          dependency-graph: generate-and-submit
      - name: Build with Gradle
        run: ./gradlew build
      - name: Build Native OCI Image
        run: ./gradlew bootBuildImage --publishImage --imagePlatform linux/arm64
        env:
          DOCKER_IMAGE: "ghcr.io/${{ steps.lower-repo.outputs.repository }}/publications:${{ github.sha }}-arm64"
          USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TARGET_PLATFORM: "arm64"
          DOCKER_TAGS: ${{github.sha}}-arm64
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
      - build-aarch64
    permissions:
      contents: write
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - id: lower-repo
        name: Repository to lowercase
        run: |
          echo "repository=${GITHUB_REPOSITORY_OWNER@L}" >> $GITHUB_OUTPUT
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: ghcr.io/${{  steps.lower-repo.outputs.repository }}/publications
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
      - name: Create manifest list and push
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
                ghcr.io/${{ steps.lower-repo.outputs.repository }}/publications:${{github.sha}}-amd64 \
                ghcr.io/${{ steps.lower-repo.outputs.repository }}/publications:${{github.sha}}-arm64
      - name: Inspect image
        run: |
              docker buildx imagetools inspect ghcr.io/${{  steps.lower-repo.outputs.repository }}/publications:${{ steps.meta.outputs.version }}